{"ast":null,"code":"import { Patient } from 'src/app/common/patient';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/patient-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction PatientFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Add Patient\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PatientFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Update Patient\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PatientFormComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientFormComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name must be at least 4 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientFormComponent_div_13_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name cannot be Bob. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientFormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, PatientFormComponent_div_13_div_1_Template, 2, 0, \"div\", 3);\n    i0.ɵɵtemplate(2, PatientFormComponent_div_13_div_2_Template, 2, 0, \"div\", 3);\n    i0.ɵɵtemplate(3, PatientFormComponent_div_13_div_3_Template, 2, 0, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"forbiddenName\"]);\n  }\n}\nexport class PatientFormComponent {\n  constructor(patientService, router, activateRoute) {\n    this.patientService = patientService;\n    this.router = router;\n    this.activateRoute = activateRoute;\n    this.patients = new Patient(0, \"kanchan\", \"Mumbai\", \"0\", 23, \"female\", \"A+\", new Date(), 0);\n  }\n  ngOnInit() {\n    this.activateRoute.paramMap.subscribe(() => this.patients);\n    this.activateRoute.paramMap.subscribe(() => this.getPatientById()); //)\n  }\n\n  onSubmit() {\n    console.log(this.patients);\n    if (this.isEditable) {\n      this.patientService.updatePatient(this.patients).subscribe(data => this.router.navigateByUrl(\"/patients\"));\n    } else {\n      this.patientService.savePatient(this.patients).subscribe(data => console.log(data));\n      this.router.navigateByUrl(\"/patients\");\n    }\n  }\n  getPatientById() {\n    const patientID = parseFloat(this.activateRoute.snapshot.paramMap.get(\"id\"));\n    console.log(patientID);\n    if (patientID > 0) {\n      this.isEditable = true;\n      this.patientService.getPatientById(patientID).subscribe(data => {\n        this.patients = data;\n        console.log(this.patients);\n      });\n    }\n  }\n}\nPatientFormComponent.ɵfac = function PatientFormComponent_Factory(t) {\n  return new (t || PatientFormComponent)(i0.ɵɵdirectiveInject(i1.PatientServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nPatientFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientFormComponent,\n  selectors: [[\"app-patient-form\"]],\n  decls: 54,\n  vars: 11,\n  consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [4, \"ngIf\"], [3, \"ngSubmit\"], [\"spForm\", \"ngForm\"], [1, \"form-group-row\"], [1, \"col-sm-2\", \"col-form-label\"], [\"type\", \"text\", \"name\", \"pname\", \"required\", \"\", \"minlength\", \"4\", \"appForbiddenName\", \"bob\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"class\", \"alert\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"address\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"contactno\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"age\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"gender\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"bloodgroup\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"birthdate\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"doctorid\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-sm-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [1, \"alert\"]],\n  template: function PatientFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, PatientFormComponent_div_3_Template, 3, 0, \"div\", 3);\n      i0.ɵɵtemplate(4, PatientFormComponent_div_4_Template, 3, 0, \"div\", 3);\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function PatientFormComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"PatientName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientFormComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.patients.pname = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, PatientFormComponent_div_13_Template, 4, 3, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 7);\n      i0.ɵɵtext(17, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientFormComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.patients.address = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"div\", 6)(21, \"label\", 7);\n      i0.ɵɵtext(22, \"ContactNumber\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientFormComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.patients.contactno = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵelementStart(25, \"div\", 6)(26, \"label\", 7);\n      i0.ɵɵtext(27, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientFormComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.patients.age = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(29, \"br\");\n      i0.ɵɵelementStart(30, \"div\", 6)(31, \"label\", 7);\n      i0.ɵɵtext(32, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientFormComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.patients.gender = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(34, \"br\");\n      i0.ɵɵelementStart(35, \"div\", 6)(36, \"label\", 7);\n      i0.ɵɵtext(37, \"BloodGroup\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientFormComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.patients.bloodgroup = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(39, \"br\");\n      i0.ɵɵelementStart(40, \"div\", 6)(41, \"label\", 7);\n      i0.ɵɵtext(42, \"BirthDate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientFormComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.patients.birthdate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(44, \"br\");\n      i0.ɵɵelementStart(45, \"div\", 6)(46, \"label\", 7);\n      i0.ɵɵtext(47, \"DoctorId\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientFormComponent_Template_input_ngModelChange_48_listener($event) {\n        return ctx.patients.doctorid = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(49, \"br\");\n      i0.ɵɵelementStart(50, \"div\", 6)(51, \"div\", 18)(52, \"button\", 19);\n      i0.ɵɵtext(53, \"submit\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(12);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.patients.id == 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.patients.id > 0);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.patients.pname);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.patients.address);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.patients.contactno);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.patients.age);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.patients.gender);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.patients.bloodgroup);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.patients.birthdate);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.patients.doctorid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Patient","i0","PatientFormComponent","constructor","patientService","router","activateRoute","Date","ngOnInit","paramMap","subscribe","patients","getPatientById","onSubmit","console","log","isEditable","updatePatient","data","navigateByUrl","savePatient","patientID","parseFloat","snapshot","get","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\angular\\HospitalmanagementSystem\\src\\app\\components\\patient-form\\patient-form.component.ts","D:\\angular\\HospitalmanagementSystem\\src\\app\\components\\patient-form\\patient-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { Patient } from 'src/app/common/patient';\nimport { PatientServiceService } from 'src/app/patient-service.service';\n\n@Component({\n  selector: 'app-patient-form',\n  templateUrl: './patient-form.component.html',\n  styleUrls: ['./patient-form.component.css']\n})\nexport class PatientFormComponent implements OnInit {\npatients:Patient=new Patient(0,\"kanchan\",\"Mumbai\",\"0\",23,\"female\",\"A+\",new Date(),0);\n  isEditable: boolean;\n  constructor(private patientService:PatientServiceService,public router:Router, public activateRoute : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activateRoute.paramMap.subscribe(()=>this.patients);\n    this.activateRoute.paramMap.subscribe(()=>this.getPatientById());//)\n  }\n\n  onSubmit(){\n    console.log(this.patients);\n    if(this.isEditable){\n      this.patientService.updatePatient(this.patients).subscribe(data=>\n        this.router.navigateByUrl(\"/patients\"));\n    }\n    else{\n    this.patientService.savePatient( this.patients ).subscribe(data =>\n      console.log(data));\n      this.router.navigateByUrl(\"/patients\");\n  }\n  }\n\ngetPatientById()\n{\n  const patientID  = parseFloat(this.activateRoute.snapshot.paramMap.get(\"id\"));\n    \n  console.log(patientID);\n  if(patientID> 0)\n  {\n    this.isEditable = true;\n    this.patientService.getPatientById(patientID).subscribe(data=>{\n      this.patients = data;\n      console.log(this.patients)\n    });\n  }\n\n  }\n}\n","\n<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n            <div *ngIf = \"patients.id ==0\">  \n            <h2>Add Patient</h2>\n            </div>\n            <div *ngIf = \"patients.id >0\">  <h2>Update Patient</h2></div>\n            <hr>\n\n\n           \n            <form #spForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group-row\">\n                    <label class=\"col-sm-2 col-form-label\">PatientName</label>\n                    <input type=\"text\" name=\"pname\" [(ngModel)]=\"patients.pname\" required minlength=\"4\" appForbiddenName=\"bob\"#name=\"ngModel\"/>\n                <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"class=\"alert\">\n\n                        <div *ngIf=\"name.errors?.['required']\">\n                            Name is required.\n                        </div>\n                        <div *ngIf=\"name.errors?.['minlength']\">\n                            Name must be at least 4 characters long.\n                        </div>\n                        <div *ngIf=\"name.errors?.['forbiddenName']\">\n                            Name cannot be Bob.\n                        </div>\n\n                </div>   \n                </div><br>\n\n                <div class=\"form-group-row\">\n                    <label class=\"col-sm-2 col-form-label\">Address</label>\n                    <input type=\"text\" name=\"address\" [(ngModel)]=\"patients.address\"/>\n                </div><br>\n                <div class=\"form-group-row\">\n                    <label class=\"col-sm-2 col-form-label\">ContactNumber</label>\n                    <input type=\"text\" name=\"contactno\" [(ngModel)]=\"patients.contactno\"/>\n                </div><br>\n\n                <div class=\"form-group-row\">\n                    <label class=\"col-sm-2 col-form-label\">Age</label>\n                    <input type=\"text\" name=\"age\" [(ngModel)]=\"patients.age\"/>\n                </div><br>\n                \n                <div class=\"form-group-row\">\n                    <label class=\"col-sm-2 col-form-label\">Gender</label>\n                    <input type=\"text\" name=\"gender\" [(ngModel)]=\"patients.gender\"/>\n                </div><br>\n                <div class=\"form-group-row\">\n                    <label class=\"col-sm-2 col-form-label\">BloodGroup</label>\n                    <input type=\"text\" name=\"bloodgroup\" [(ngModel)]=\"patients.bloodgroup\"/>\n                </div><br>\n                <div class=\"form-group-row\">\n                    <label class=\"col-sm-2 col-form-label\">BirthDate</label>\n                    <input type=\"date\" name=\"birthdate\" [(ngModel)]=\"patients.birthdate\"/>\n                </div><br>\n                <div class=\"form-group-row\">\n                    <label class=\"col-sm-2 col-form-label\">DoctorId</label>\n                    <input type=\"text\" name=\"doctorid\" [(ngModel)]=\"patients.doctorid\"/>\n                </div><br>\n                \n                <div class=\"form-group-row\">\n                    <div class=\"col-sm-2\"><button class=\"btn btn-info\" type=\"submit\">submit</button></div>\n                </div>\n\n            </form>\n            </div>\n            </div>\n            </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}