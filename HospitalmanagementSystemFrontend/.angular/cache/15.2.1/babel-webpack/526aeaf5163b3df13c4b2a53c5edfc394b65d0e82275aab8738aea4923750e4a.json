{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/patient-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction PatientListComponent_tr_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function PatientListComponent_tr_47_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tempPatient_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updatePatient(tempPatient_r1.id));\n    });\n    i0.ɵɵtext(15, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16, \" \\u00A0 \\u00A0 \");\n    i0.ɵɵelementStart(17, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function PatientListComponent_tr_47_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const tempPatient_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deletePatient(tempPatient_r1.id));\n    });\n    i0.ɵɵtext(18, \"Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tempPatient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempPatient_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempPatient_r1.pname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempPatient_r1.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempPatient_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempPatient_r1.gender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempPatient_r1.doctorid);\n  }\n}\nexport class PatientListComponent {\n  constructor(patientService, activateRoute, route) {\n    this.patientService = patientService;\n    this.activateRoute = activateRoute;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.activateRoute.paramMap.subscribe(() => this.getAllPatient());\n  }\n  getAllPatient() {\n    this.hasSearchName = this.activateRoute.snapshot.paramMap.get(\"pname\");\n    console.log(this.hasdoctortId);\n    this.hasdoctortId = this.activateRoute.snapshot.paramMap.has(\"doctorId\");\n    if (this.hasdoctortId) {\n      const doctorId = +this.activateRoute.snapshot.paramMap.get(\"doctorId\");\n      this.patientService.getAllPatientByDoctor(doctorId).subscribe(data => {\n        console.log(data);\n        this.patients = data;\n      });\n    } else if (this.hasSearchName) {\n      this.searchName = this.activateRoute.snapshot.paramMap.get(\"pname\");\n      console.log(this.searchName);\n      this.patientService.getAllPatientsSearchByPname(this.searchName).subscribe(data => {\n        console.log(data);\n        this.patients = data;\n        console.log(\"hai\");\n      });\n    } else {\n      this.patientService.getAllPatient().subscribe(data => {\n        console.log(data);\n        this.patients = data;\n      });\n    }\n  }\n  addPatient() {\n    this.route.navigateByUrl(\"/patientform\");\n  }\n  updatePatient(id) {\n    this.route.navigateByUrl(\"/updatePatient/\" + id);\n  }\n  deletePatient(id) {\n    console.log(id);\n    if (confirm(\"Do you want to delete ?\")) {\n      this.patientService.deletePatient(id).subscribe(data => {\n        console.log(data);\n        this.getAllPatient();\n      });\n    }\n  }\n}\nPatientListComponent.ɵfac = function PatientListComponent_Factory(t) {\n  return new (t || PatientListComponent)(i0.ɵɵdirectiveInject(i1.PatientServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nPatientListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientListComponent,\n  selectors: [[\"app-patient-list\"]],\n  decls: 49,\n  vars: 1,\n  consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"aut-btn-submit\", \"btn-primary\", 3, \"click\"], [1, \"table\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-md\", \"btn-info\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-md\", \"btn-danger\", 3, \"click\"]],\n  template: function PatientListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function PatientListComponent_Template_button_click_4_listener() {\n        return ctx.addPatient();\n      });\n      i0.ɵɵtext(5, \"AddPatient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"table\", 5)(7, \"thead\")(8, \"tr\", 6)(9, \"th\");\n      i0.ɵɵtext(10, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"DoctorId\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tr\")(22, \"td\");\n      i0.ɵɵtext(23, \"12\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"td\");\n      i0.ɵɵtext(25, \"Kanchan\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"td\");\n      i0.ɵɵtext(27, \"Mumbai\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"td\");\n      i0.ɵɵtext(29, \"34\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"td\");\n      i0.ɵɵtext(31, \"Female\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"td\");\n      i0.ɵɵtext(33, \"106\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"tr\")(35, \"td\");\n      i0.ɵɵtext(36, \"13\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"td\");\n      i0.ɵɵtext(38, \"Nikita\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"td\");\n      i0.ɵɵtext(40, \"Pune\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"td\");\n      i0.ɵɵtext(42, \"35\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"td\");\n      i0.ɵɵtext(44, \"Female\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"td\");\n      i0.ɵɵtext(46, \"107\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(47, PatientListComponent_tr_47_Template, 19, 6, \"tr\", 7);\n      i0.ɵɵelement(48, \"tr\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(47);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PatientListComponent","constructor","patientService","activateRoute","route","ngOnInit","paramMap","subscribe","getAllPatient","hasSearchName","snapshot","get","console","log","hasdoctortId","has","doctorId","getAllPatientByDoctor","data","patients","searchName","getAllPatientsSearchByPname","addPatient","navigateByUrl","updatePatient","id","deletePatient","confirm","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\angular\\HospitalmanagementSystem\\src\\app\\components\\patient-list\\patient-list.component.html","D:\\angular\\HospitalmanagementSystem\\src\\app\\components\\patient-list\\patient-list.component.ts"],"sourcesContent":["<div class=\"main-content\">\n    <div class=\"section-content section-content-p30\">\n        <div class=\"container-fluid\">\n            \n            <div class=\"row\">\n               \n                    <button class=\"aut-btn-submit btn-primary\" (click)=\"addPatient()\">AddPatient</button>\n                \n               \n              <table class='table'>\n                <thead>\n                    <tr class='table-dark'>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Address</th>\n                        <th>Age</th>\n                        <th>Gender</th>\n                        <th>DoctorId</th>\n                    </tr>\n            \n                    \n                </thead>\n                <tr >\n                    <td>12</td>\n                    <td>Kanchan</td>\n                    <td>Mumbai</td>\n                    <td>34</td>\n                    <td>Female</td>\n                    <td>106</td>\n                </tr>\n                <tr >\n                    <td>13</td>\n                    <td>Nikita</td>\n                    <td>Pune</td>\n                    <td>35</td>\n                    <td>Female</td>\n                    <td>107</td>\n                </tr>\n                <tr *ngFor=\"let tempPatient of patients\">\n                    <td>{{tempPatient.id}}</td>\n                    <td>{{tempPatient.pname}}</td>\n                    <td>{{tempPatient.address}}</td>\n                    <td>{{tempPatient.age}}</td>\n                    <td>{{tempPatient.gender}}</td>\n                    <td>{{tempPatient.doctorid}}</td>\n                   <td>\n                        <button type=\"button\" class=\"btn btn-md btn-info\" (click) = \"updatePatient(tempPatient.id)\">Update</button>\n                        &nbsp; &nbsp;\n                        <button type=\"button\" class=\"btn btn-md btn-danger\"  (click) = \"deletePatient(tempPatient.id)\">Delete </button>\n    \n                       </td>\n                  </tr>\n                  <tr>\n                  \n\n                  </tr>\n            </table>\n            \n            </div>\n           \n            \n\n        </div>\n    \n </div>\n </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Patient } from 'src/app/common/patient';\nimport { PatientServiceService } from 'src/app/patient-service.service';\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.css']\n})\nexport class PatientListComponent implements OnInit {\n  patients:Patient[];\n  hasdoctortId : boolean;\n  hasSearchName:any;\n  searchName:string;\n    constructor(private patientService:PatientServiceService,public activateRoute :ActivatedRoute,private route:Router) \n    {\n  \n     }\n \n\n  ngOnInit(): void {\n    this.activateRoute.paramMap.subscribe(()=>this.getAllPatient());\n  }\n\n\n  getAllPatient():void\n  {\n    this.hasSearchName  = this.activateRoute.snapshot.paramMap.get(\"pname\");\n    console.log(this.hasdoctortId)\n    this.hasdoctortId= this.activateRoute.snapshot.paramMap.has(\"doctorId\");\n\n    if(this.hasdoctortId){\n      const doctorId = +(this.activateRoute.snapshot.paramMap.get(\"doctorId\"));\n      this.patientService.getAllPatientByDoctor(doctorId).subscribe(data=>{\n        console.log(data);\n        this.patients= data\n      })\n    }\n\n   else if(this.hasSearchName)\n    {\n      this.searchName  = this.activateRoute.snapshot.paramMap.get(\"pname\");\n      console.log(this.searchName)\n    this.patientService.getAllPatientsSearchByPname(this.searchName).subscribe(data=>{\n      console.log(data);\n      this.patients= data;\n      console.log(\"hai\")\n    });\n  }\nelse{\n\n  \n    this.patientService.getAllPatient().subscribe(data=>{\n      console.log(data);\n      this.patients=data;\n    });\n  }\n}\n  addPatient():void{\n    this.route.navigateByUrl(\"/patientform\")\n  }\n\n  updatePatient(id : Number){\n    this.route.navigateByUrl(\"/updatePatient/\" +id);\n  }\n  deletePatient(id : Number)\n  {\n    console.log(id);\n    if(confirm(\"Do you want to delete ?\")){\n      this.patientService.deletePatient(id).subscribe(data=>{\n        console.log(data);\n        this.getAllPatient();\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}